package kr.co.kwins.bookshop.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import kr.co.kwins.bookshop.model.Book;
import kr.co.kwins.bookshop.pager.Pager;
import kr.co.kwins.bookshop.service.BookService;

@RestController
@RequestMapping("/api")
public class ApiController {
	
	@Autowired
	BookService service;
	
	@GetMapping("/list/{pager}") // 일종의 wrapper 클래스를 쓰는것?
	Map<String, Object> list(@PathVariable int page){
		
	}
	
	@GetMapping
	Map<String, Object> list(@RequestBody(required = false) Pager pager){
		if(pager == null)
			pager = new Pager();
		
		Map<String, Object> map = new HashMap<>();
		
		map.put("list", service.list(pager));
		map.put("pager", pager);
		
		return map;
	}
	
	@PostMapping
	Book add(@RequestBody Book item) {
		service.add(item);
		
		return item;
	}
	
	@PutMapping
	// put을 많이쓰지만 patch를 섞어서 씀
	Book update(@RequestBody Book item) {
		service.update(item);
		
		return item;
	}
	
	@DeleteMapping
	Book delete(@RequestBody Book item) {
		service.delete(item.getBookid());
		
		return item;
	}

}
